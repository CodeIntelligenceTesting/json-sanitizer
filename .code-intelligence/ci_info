{
  "name": "projects/json-sanitizer-d550973a",
  "displayName": "json-sanitizer",
  "buildScriptContent": "export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64\nexport PATH=$PATH:$JAVA_HOME/bin\nmvn clean package -DskipTests --batch-mode",
  "details": {
    "javaDetails": {
      "jars": [
        "gson-2.8.6.jar",
        "target/json-sanitizer-1.2.2-SNAPSHOT-javadoc.jar",
        "target/json-sanitizer-1.2.2-SNAPSHOT-sources.jar",
        "target/json-sanitizer-1.2.2-SNAPSHOT.jar"
      ],
      "packages": [
        "com",
        "com.google",
        "com.google.json"
      ]
    },
    "buildSystem": "MAVEN",
    "javaWebAppDetails": {
      "projectExceptionPolicy": {
        "policy": [
          {
            "enabled": true,
            "responsePolicy": {
              "responseMatcher": "CODE_STARTS_WITH",
              "code": 2
            }
          },
          {
            "enabled": true,
            "responsePolicy": {
              "responseMatcher": "CODE_STARTS_WITH",
              "code": 4
            }
          },
          {
            "enabled": true,
            "responsePolicy": {
              "code": 302
            }
          },
          {
            "enabled": true,
            "exceptionPolicy": {
              "Exception": "java.lang.IllegalArgumentException",
              "exceptionStrategy": "STACKTRACE_CONTAINS",
              "content": "org.springframework.web.util.UriComponentsBuilder"
            }
          }
        ]
      }
    }
  },
  "projectEnvironment": {
    "dockerBuild": {
      "name": "gcr.io/code-intelligence/owasp-json-sanitizer-builder"
    },
    "dockerRun": {
      "name": "gcr.io/code-intelligence/owasp-json-sanitizer-builder"
    }
  },
  "testScriptContent": "# The build and test script can be something like:\n#    mkdir build\n#    cd build\n#    cmake .. # Here, you can place your CMake options\n#    make -j$(nproc)\n#    ctest -j$(nproc)\n# Note: The build script will be executed from the project's root directory."
}